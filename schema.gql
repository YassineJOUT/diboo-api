# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input AdminInput {
  id: ID
  email: String!
  password: String!
}

type AdminType {
  id: ID
  email: String
  password: String
}

input CarouselInput {
  id: ID
  title: String
  subtitle: String
  status: Boolean
  bannerLink: String
  image: Upload
  imagePath: String
}

type CarouselResponseType {
  ok: Boolean
  error: String
  data: [CarouselType!]
}

type CarouselType {
  id: ID
  title: String
  subtitle: String
  status: Boolean
  bannerLink: String
  createdAt: DateTime
  imagePath: String
}

input CommissionInput {
  id: ID
  commission: Float!
}

type CommissionType {
  id: ID
  commission: Float
}

input CustomerInput {
  id: ID
  name: String!
  phone: String!
  email: String!
  addedDate: DateTime!
  status: Boolean
  restaurant: ID
}

type CustomerResponseType {
  ok: Boolean
  error: String
  data: [CustomerType!]
}

type CustomerType {
  id: ID
  name: String!
  phone: String!
  email: String!
  addedDate: DateTime!
  status: Boolean
  restaurant: String
  orders: [OrderType!]
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  createAdmin(input: AdminInput!): AdminType!
  updateAdmin(input: AdminInput!): AdminType!
  deleteAdmin(id: String!): String!
  login(input: LoginInput!): ResponseType!
  signup(input: AdminInput!): AdminType!
  createCarousel(input: CarouselInput!): CarouselResponseType!
  addCarouselPhoto(input: CarouselInput!): CarouselResponseType!
  deleteCarousel(id: String!): Boolean!
  createSiteSettings(input: SiteInput!): SiteType!
  updateSiteSettings(input: SiteInput!): SiteType!
  createCommission(input: CommissionInput!): CommissionType!
  updateCommission(input: CommissionInput!): CommissionType!
  createRestaurant(input: RestaurantInput!): RestaurantResponseType!
  addRestaurantPhoto(input: RestaurantInput!): RestaurantResponseType!
  deleteRestaurant(id: String!): Boolean!
  updateRestaurant(input: RestaurantInput!): RestaurantResponseType!
  updateRestaurantStatus(status: Boolean!, id: String!): RestaurantResponseType!
  createCustomer(input: CustomerInput!): CustomerResponseType!
  createOrder(input: OrderInput!): OrderResponseType!
}

input OrderInput {
  id: ID
  totalPrice: Float!
  paymentMethod: String!
  date: DateTime!
  customer: ID
}

type OrderResponseType {
  ok: Boolean
  error: String
  data: [OrderType!]
}

type OrderType {
  id: ID
  totalPrice: Float!
  paymentMethod: String!
  date: DateTime!
  customer: String
}

type Query {
  getOne(email: String!): AdminType!
  getAll: [AdminType!]!
  whoAmI: AdminType!
  getOneCarousel(id: String!): CarouselResponseType!
  getCarousels: CarouselResponseType!
  getAllSettings: [SiteType!]!
  getCommission: [CommissionType!]!
  getOneRestaurant(id: String!): RestaurantResponseType!
  getRestaurants: RestaurantResponseType!
  getCustomers: CustomerResponseType!
  getOneCustomer(id: String!): CustomerResponseType!
  getOrders: OrderResponseType!
}

type ResponseType {
  ok: Boolean
  error: String
  data: AdminType
}

input RestaurantInput {
  id: ID
  name: String!
  website: String!
  phone: String!
  postCode: String!
  email: String!
  address: String!
  city: String!
  estimatedTime: String!
  about: String!
  delivery: Boolean!
  pickUp: Boolean!
  dineIn: Boolean!
  commission: Float!
  image: Upload
  imagePath: String
  status: Boolean
}

type RestaurantResponseType {
  ok: Boolean
  error: String
  data: [RestaurantType!]
}

type RestaurantType {
  id: ID
  name: String!
  website: String!
  phone: String!
  postCode: String!
  email: String!
  address: String!
  city: String!
  estimatedTime: String!
  about: String!
  delivery: Boolean!
  pickUp: Boolean!
  dineIn: Boolean!
  commission: String!
  image: Upload
  imagePath: String
  status: Boolean
  customers: [CustomerType!]
}

input SiteInput {
  id: ID
  adminName: String!
  adminEmail: String!
  supportEmail: String!
  sitePhone: String!
  siteName: String!
  siteLogo: String!
  siteFavIcon: String!
  adminPage: String!
  userPage: String!
  offlineStatus: Boolean!
  offlineNote: String!
  currencySymbol: String!
  headerText: String!
  googleAnalyticCode: String!
  siteMetaTagTitle: String!
  siteMetaTagKeyword: String!
  siteMetaTagDescription: String!
  facebook: String!
  twitter: String!
  linkedin: String!
  youtube: String!
  instagram: String!
}

type SiteType {
  id: ID
  adminName: String
  adminEmail: String
  supportEmail: String
  sitePhone: String
  siteName: String
  siteLogo: String
  siteFavIcon: String
  adminPage: String
  userPage: String
  offlineStatus: Boolean
  offlineNote: String
  currencySymbol: String
  headerText: String
  googleAnalyticCode: String
  siteMetaTagTitle: String
  siteMetaTagKeyword: String
  siteMetaTagDescription: String
  facebook: String
  twitter: String
  linkedin: String
  youtube: String
  instagram: String
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload
